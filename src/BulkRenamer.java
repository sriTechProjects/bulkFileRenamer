/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.Color;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
/**
 *
 * @author Asus
 */
public class BulkRenamer extends javax.swing.JFrame {

    private static File[] chosenFiles;

    /**
     * Creates new form BulkRenamer
     */
    public BulkRenamer(File[] chosenFiles) {
        this.chosenFiles = chosenFiles;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bulk File Renamer");
        setBackground(new java.awt.Color(245, 245, 245));

        jLabel1.setBackground(new java.awt.Color(0, 64, 133));
        jLabel1.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Rename Files");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel2.setText("Rename Attachement");

        jTextField1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jList1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Rename Entire Filename Sequentially", "Add Suffix to Filename", "Add Prefix to Filename", "Add Suffix with Sequential Numbering", "Add Prefix with Sequential Numbering", "Prefix Filename with Date" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setToolTipText("<html>\n    <p>\n       <h4>Rename Entire Filename Sequentially</h4>\t\n        This option renames all selected files by assigning them attachment and Sequential Numbers.<br>\n        <b>Example:</b>Attachment: Srivaths file1.txt → Srivaths1.txt, file2.txt → Srivaths2.txt.\n    </p>\n    <p>\n       <h4>Add Suffix to Filename</h4>\t\n        This option renames all selected files by adding the attachment as Suffix<br>\n        <b>Example:</b>Attachment: Srivaths file1.txt → file1_Srivaths.txt, file2.txt → file2_Srivaths.txt.\n    </p>\n    <p>\n       <h4>Add Prefix to Filename</h4>\t\n        This option renames all selected files by adding the attachment as Prefix<br>\n        <b>Example:</b>Attachment: Srivaths file1.txt → Srivaths_file1.txt, file2.txt → Srivaths_file2.txt.\n    </p>\n    <p>\n        <h4>Add Suffix with Sequential Numbering</h4>\t\n        This option renames all selected files by adding the attachment as Suffix and Sequential Numbering<br>\n        <b>Example:</b>Attachment: Srivaths file1.txt → file1_Srivaths_1.txt, file2.txt → file2_Srivaths_2.txt.\n    </p>\n    <p>\n       <h4>Add Prefix with Sequential Numbering</h4>\t\n        This option renames all selected files by adding the attachment as Prefix and Sequential Numbering<br>\n        <b>Example:</b>Attachment: Srivaths file1.txt → 1_Srivaths_file1.txt, file2.txt → 2_Srivaths_file2.txt.\n    </p>\n    <p>\n       <h4>Prefix Filename with Date</h4>\t\n        This option renames all selected files by assigning them Date and Attachment as Prefix.<br>\n        <b>Example:</b>Attachment: Srivaths file1.txt → 28-12-2024_Srivaths_file1.txt, file2.txt → 28-12-2024_Srivaths_file2.txt.\n    </p>\n</html>\n");
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel3.setText("Before");

        jLabel4.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel4.setText("After");

        jButton2.setBackground(new java.awt.Color(0, 123, 255));
        jButton2.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Rename");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(224, 224, 224));
        jButton3.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 47, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jTextField1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    String getExtension(File fileName) {
        int extIndex = fileName.getName().lastIndexOf('.');
        return fileName.getName().substring(extIndex);
    }

    String getFileNamewithoutExt(File fileName) {
        int extIndex = fileName.getName().lastIndexOf('.');
        return fileName.getName().substring(0, extIndex);
    }

    private String[] renamedFileNames(File[] chosenFiles, int renameMethod, String attachment) {
        String[] fileNames = new String[chosenFiles.length];

        switch (renameMethod) {
            case 0:
                for (int i = 0; i < chosenFiles.length; i++) {
                    fileNames[i] = attachment + (i + 1);
                }
                break;

            case 1:
                for (int i = 0; i < chosenFiles.length; i++) {
                    fileNames[i] = getFileNamewithoutExt(chosenFiles[i]) + '_' + attachment;
                }
                break;
            case 2:
                for (int i = 0; i < chosenFiles.length; i++) {
                    fileNames[i] = attachment + '_' + getFileNamewithoutExt(chosenFiles[i]);
                }
                break;

            case 3:
                for (int i = 0; i < chosenFiles.length; i++) {
                    fileNames[i] = getFileNamewithoutExt(chosenFiles[i]) + '_' + attachment + '_' + (i + 1);
                }
                break;
            case 4:
                for (int i = 0; i < chosenFiles.length; i++) {
//                    fileNames[i] = Integer.toString(i + 1) + '_' + attachment + '_' + getFileNamewithoutExt(chosenFiles[i]);
                     fileNames[i] = (i + 1) +""+ '_' + attachment + '_' + getFileNamewithoutExt(chosenFiles[i]);
                }
                break;
            case 5:
                SimpleDateFormat ctdt = new SimpleDateFormat("dd-MM-yyyy");
                String dt = ctdt.format(new Date());
                for (int i = 0; i < chosenFiles.length; i++) {
                    fileNames[i] = dt + '_' + attachment + '_' + getFileNamewithoutExt(chosenFiles[i]);
                }
                break;

        }
        return fileNames;
    }

    private void renameFiles(File[] chosenFiles, int renameMethod, String attachment) {
        File[] renamedFiles = new File[chosenFiles.length];
        switch (renameMethod) {
            case 0:
                for (int i = 0; i < chosenFiles.length; i++) {
                    File renamedFile = new File(chosenFiles[i].getParent(), attachment + (i + 1) + getExtension(chosenFiles[i]));
                    chosenFiles[i].renameTo(renamedFile);
                }
                break;

            case 1:
                for (int i = 0; i < chosenFiles.length; i++) {
                    File renamedFile = new File(chosenFiles[i].getParent(), getFileNamewithoutExt(chosenFiles[i]) + '_' + attachment + getExtension(chosenFiles[i]));
                    chosenFiles[i].renameTo(renamedFile);
                }
                break;
            case 2:
                for (int i = 0; i < chosenFiles.length; i++) {
                    File renamedFile = new File(chosenFiles[i].getParent(), attachment + '_' + getFileNamewithoutExt(chosenFiles[i]) + getExtension(chosenFiles[i]));
                    chosenFiles[i].renameTo(renamedFile);
                }
                break;
            case 3:
                for (int i = 0; i < chosenFiles.length; i++) {
                    File renamedFile = new File(chosenFiles[i].getParent(), getFileNamewithoutExt(chosenFiles[i]) + '_' + attachment+ '_'+(i+1)+ getExtension(chosenFiles[i]));
                    chosenFiles[i].renameTo(renamedFile);
                }
                break;
            case 4:
                for (int i = 0; i < chosenFiles.length; i++) {
                    File renamedFile = new File(chosenFiles[i].getParent(),(i+1)+""+'_'+attachment + '_'+getFileNamewithoutExt(chosenFiles[i]) + getExtension(chosenFiles[i]));
                    chosenFiles[i].renameTo(renamedFile);
                }
                break;
            case 5:
                SimpleDateFormat ctdt = new SimpleDateFormat("dd-MM-yyyy");
                String dt = ctdt.format(new Date());
                for (int i = 0; i < chosenFiles.length; i++) {
                    File renamedFile = new File(chosenFiles[i].getParent(),dt+'_'+attachment + '_'+getFileNamewithoutExt(chosenFiles[i]) + getExtension(chosenFiles[i]));
                    chosenFiles[i].renameTo(renamedFile);
                }
                break;
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String attachment = jTextField1.getText();
        int renamingMethod = jList1.getSelectedIndex();
        System.out.println(renamingMethod);
        if(attachment.equals("")){
            jLabel5.setForeground(Color.red);
            jLabel5.setText("Enter an Attachment String");
        }else if(renamingMethod==-1){
            jLabel5.setForeground(Color.red);
            jLabel5.setText("Choose Renaming Method");
        }
        else{
            renameFiles(chosenFiles, renamingMethod, attachment);
            JOptionPane.showMessageDialog( this, "Files Renamed!", "Success", JOptionPane.INFORMATION_MESSAGE);
            MainUI mu = new MainUI();
            mu.setVisible(true);
            this.dispose();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        MainUI mi = new MainUI();
        mi.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        String attachment = jTextField1.getText();
//         System.out.print(attachment);
        int renamingMethod = jList1.getSelectedIndex();
        System.out.print(renamingMethod);
        String[] fileNames = renamedFileNames(chosenFiles, renamingMethod, attachment);
        jTextArea1.setText("");
        jTextArea2.setText("");
        for (int i = 0; i < chosenFiles.length; i++) {
            System.out.println(fileNames[i]);
            jTextArea1.append(chosenFiles[i].getName() + "\n");
            jTextArea2.append(fileNames[i] + getExtension(chosenFiles[i]) + "\n");
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
       String attachment = jTextField1.getText();
//         System.out.print(attachment);
        int renamingMethod = jList1.getSelectedIndex();
        System.out.print(renamingMethod);
        String[] fileNames = renamedFileNames(chosenFiles, renamingMethod, attachment);
        jTextArea1.setText("");
        jTextArea2.setText("");
        for (int i = 0; i < chosenFiles.length; i++) {
            System.out.println(fileNames[i]);
            jTextArea1.append(chosenFiles[i].getName() + "\n");
            jTextArea2.append(fileNames[i] + getExtension(chosenFiles[i]) + "\n");
        }
    }//GEN-LAST:event_jList1ValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BulkRenamer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BulkRenamer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BulkRenamer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BulkRenamer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BulkRenamer(chosenFiles).setVisible(true);
                BulkRenamer blk = new BulkRenamer(chosenFiles);
                blk.setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
